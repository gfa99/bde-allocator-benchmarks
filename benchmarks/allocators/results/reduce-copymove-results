#!/bin/bash

# Convert time in XmY.YYYs format to seconds.
# Examples: "1m12.051s" is converted to "72.051"
function minsecToSec
{
    min=${1%m*}
    sec=${1#*m}
    sec=${sec%s}
    echo $(echo "60*$min+$sec" | bc)
}

# Filter stdin to include only the executed command (starting with '+') and
# the wall-clock time to execute (starting with "real")
egrep -e '^(\+|real\t)' copymove-result | (
    # Read two lines: "+ program arg..." and "real 0m4.05s"
    while read plus progname args && read timetype time; do
        key=${progname#*-}  # Suffix on program name. Should be "MV" or "CP".
        time=$(minsecToSec $time) # Convert time to pure seconds
        echo "$args,$key,$time"
    done
) | sort -n | (
    # Print field headings
    echo -n "Benchmark Arguments"
    echo -n ", use copies"
    echo    ", use moves"
    refargs=""
    # Read args, key, and time (comma-separated as set by IFS).
    # Expect alternating CP and MV lines and compute the relative times
    while IFS=, read args key time; do
        case "$key" in
            (CP) if [ ! -z "$refargs" ]; then
                     # Got two CP lines in a row.  Missing MV time and reltime
                     printf "%s, %ss, ?s (?%%)\n" "$refargs" $reftime
                 fi
                 reftime=$time
                 refargs="$args"
                 ;;
            (MV) if [ "$refargs" != "$args" ]; then
                     # Mismatch beween MV line and pior CP line
                     printf "%s, ?s, %ss (?%%)\n" "$args" $time
                 fi
                 reltime=`echo "scale=1; 100*$time/$reftime" | bc`
                 printf "%s, %ss, %ss (%.0f%%)\n" "$args" $reftime $time "$reltime"
                 refargs=""
                 ;;
        esac
    done
) > copymove.csv
